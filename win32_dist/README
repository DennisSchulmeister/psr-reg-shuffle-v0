~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~ HOW TO BUILD A READY-TO-USE WINDOWS-DISTRIBUTION OF PSR-REG-SHUFFLE?         ~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(C) 2008 - Dennis Schulmeister  <dennist -at- ncc-1701a.homelinux.net>
Licensed under the terms of the GPL for free documentation

TABLE OF CONTENTS

 1. Using the Pre-Configured Python Template
 2. Creating a comfortable installer
 3. Doing it all from scratch


--------------------------------------------------------------------------------
- Using the Pre-Configured Python Template                                     -
--------------------------------------------------------------------------------
Using the shipped python template creating a Windows distribution of the
PSR Registration Shuffler shouldn't be all to hard. Provided you follow this
simple steps on your favorite Windows machine:

 1. Make a clean install of python somewhere like D:\PYTHON25\.

 2. Backup the python directory to say D:\PYTHON25-OLD\

 3. Unzip python25-tempplate-striped.zip somewhere, say:
    D:\python25-template-striped

 4. Make the contained "program" directory replace your previous python
    installation. This means copy it to D:\PYTHON25\

 5. Use distutils from the program's source tree in order to build a setup file
    for Windows:

    \> python setup.py bdist --format=wininst

    The exe-file will be in .\dist\ !!

 6. Use the installer to install psr-reg-shuffle into your python directory.

 7. Copy D:\PYTHON25 back to D:\python25-template-striped\program

 8. Rename the distribution's top-directory to: psr-reg-shuffle_A.B_winXY_python
    where as A.B is the program version and XY the windows version like win32
    or win64.

 8. Restore your backup of the old python directory.

 9. Uninstall python again.

10. Either create a huge archive from your disitrubtion or use the shipped
    Nullsoft Installer Script in order to build a setup program. (Refer to
    section below)


--------------------------------------------------------------------------------
- Creating a comfortable installer                                             -
--------------------------------------------------------------------------------
 1. First create a new distribution either by using one of the python-templates
    as described above or by doing it all over again as described below.

 2. Store your new distribution to a new working directory. (Unpacked)

 3. Copy content from installer/ directory to the working directory.

 4. Write a README.txt or copy it from ../trunk/. Make sure it uses Windows
    style line-endings (CRLF).

 5. Edit first lines of psrregshuffle.nsi (e.g. version number, author, ...)

 6. Run makensis psrregshuffle.nsi.
    A file called psr-reg-shuffle_VERSION_win32_setup.exe will be created.


--------------------------------------------------------------------------------
- Doing it all from scratch                                                    -
--------------------------------------------------------------------------------
Normally the pre-built python template should be suffice for creating a
Windows distribution of the PSR Registration Shuffler. So before doing it all
again please try it first. Anyway this is a description how the python template
was created in the first place:

Building a ready-to-run Windows distribution of »PSR Registrations Shuffler« is
straight forward once you got all packages together. It's basically just a
regular python distribution with all python modules and GTK+ binaries
pre-installed.

On a Windows machine perform the following steps:

 1. Make a clean install of python somewhere like D:\PYTHON25\.

 2. Copy python25.dll from C:\WINDOWS\SYSTEM32 into the program directory.
    Also copy msvcr71.dll into the program directory.

 3. Install all needed python modules there:

     * pyGTK 2.12.1
     * pyGObject 2.14.1-1
     * pyCairo 1.4.12.1
     * kiwi 1.9.22

     Later version should probably work, too.[*]

 4. Use distutils from the program's source tree in order to build a setup file
    for Windows:

    \> python setup.py bdist --format=wininst

    The exe-file will be in .\dist\ !!

 5. Use the installer to install psr-reg-shuffle into your python directory.

 6. Clean up by removing unnecessary documentation and test file from the python
    directory. This way you can shrink from ~ 89 Meg to 20 Meg.

 7. If necessary remove .svn directories from complete directory hierarchy.
    (e.g.: for dir in `ls -R`; do rm $dir/.svn; done; )

 8. Rename pythons README and LICENCE to python-README and python-LICENCE

 9. Create new directory for the final distribution.

10. Create sub-directory "program" under final distribution directory and copy
    content of C:\PYTHON25\ there.

11. Copy psrregshuffle.exe into the top-directory. (See python25-template/ or
    /trunk/extras/win32-starter/)

12. Install the pre-compiled GTK+ Runtime Environment on your computer.
    But make sure it includes libglade. (e.g. by using the neat distribution
    from http://gladewin32.sourceforge.net)

13. Copy the complete GTK+ installation from something like C:\PROGRAMS\GTK
    to program\GTK.

14. Remove unnecessary files from the GTK+ disitrubtion like unneeded locales,
    images and demo applications. (Saves about 19 Meg)

15. Uninstall GTK+ from your system again.

16. Rename the distribution's top-directory to: psr-reg-shuffle_A.B_winXY_python
    where as A.B is the program version and XY the windows version like win32
    or win64.

17. Either create a huge archive from your disitrubtion or use the shipped
    Nullsoft Installer Script in order to build a setup program. (Refer to
    section above)

That's all there is to do. But of course you should also test-run your newly
created distribution. Especially since the Windows versions of the employed
python modules might contain bugs of their own.

________________________

[*] ATTENTION: Don't use pyGTK 2.12.1-2. It actually lacks the following
method used by the »PSR Registration Shuffler«.

 --> gtk.gdk.DragContext.get_source_widget()

The pre-built Windows version simply doesn't include it. Unfortunately the
program won't run without. So either stick to pGTK 2.12.1-1 or any later
version. But anyway, make sure to test your distribution.
